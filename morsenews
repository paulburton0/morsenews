#!/usr/bin/env node

// NOTE: In order to use morsenews, you must have the `feed-read' module installed.
var feed = require('feed-read');
var morse = require('morsecodify');
var fs = require('fs');

const commandLineArgs = require('command-line-args');

const optionDefinitions = [
    { name: 'feedurl', alias: 'e', type: String},
    { name: 'sidetone', alias: 't', type: Number, defaultValue: 800},
    { name: 'wpm', alias: 's', type: Number, defaultValue: 15},
    { name: 'farnsworth', alias: 'f', type: Number, defaultValue: 10},
    { name: 'outputdir', alias: 'o', type: String},
    { name: 'playlisturl', alias: 'p', type: String},
    { name: 'help', alias: 'h', type: Boolean},
    { name: 'showtitles', alias: 'r', type: Boolean, defaultValue: false}
];

const options = commandLineArgs(optionDefinitions);

function showHelp(){
    console.log('Usage: node morsenews -s 10 -t 800 -e "http://www.arrl.org/news/rss" -o "/var/www/html/morse/" -p "http://example.com/morse/"');
    console.log('\nOptions');
    console.log('--feedurl -e      Required. Feed URL to fetch and convert headlines to morse code.');
    console.log('--outputdir -o    Required. The directory to save the generated .wav files to.');
    console.log('--playlisturl -p  Required. The URL to prepend to the playlist file location.');
    console.log('--sidetone -t     Sets the tone frequency. Default is 800.');
    console.log('--wpm -s          Sets the speed in wpm. Default is 15.');
    console.log('--farnsworth -f   Sets the Farnsworth timing (space between characters and words) in wpm. Default is 10.');
    console.log('--showtitles -r   Shows the translated text for each headline as the track title in the playlist');
    process.exit();
}

if(options.help){
    showHelp();
}

if(!options.feedurl){
    console.error('No feed URL specified');
    showHelp();
}
if(!options.outputdir){
    console.error('No output directory specified');
    showHelp();
}
if(!options.playlisturl){
    console.error('No playlist URL specified');
    showHelp();
}

var feedUrl = options.feedurl;
var filesLocation = options.outputdir;
var playlistLocation = options.playlisturl
var toneFreq = options.sidetone;
var wpm = options.wpm;
var farnsworth = options.farnsworth;
var titleName = options.showtitles;
var replaceChars = new Array(
                             ' $', ' usd ', 
                             '% ', ' pct ', 
                             ' & ', ' es ', 
                             ' # ', ' nr ',
                             ' and ', ' es '
                             );

var playList = '#EXTM3U\n';

feed(feedUrl, function(err, articles){
    if(err) console.error(err);
    for (var i = 0, iterator = articles.length; i < articles.length; i++) {
        morse.codify(toneFreq, wpm, farnsworth, articles[i].title+' =', replaceChars, function(err, codeBuffer, translated){
            if(err) console.error(err);
            else {
                var storyNum = i < 10 ? '0' + i : i;
                var fileName = 'story' + storyNum + '.wav';
                fs.writeFile(filesLocation + fileName, codeBuffer, function(err){
                    iterator--;
                    if(err) console.error(err);
                    if(titleName){
                        playList += '#EXTINF:0,,' + translated + '\n' + playlistLocation + fileName + '\n';
                    }
                    else{
                        playList += '#EXTINF:0,,' + 'Story ' + storyNum + '\n' + playlistLocation + fileName + '\n';
                    }
                    if(!iterator){
                        fs.writeFile(filesLocation + 'news.m3u', playList, function(err){
                            if(err) console.error(err);
                        });
                    }
                });
            }
        });
    }
});
